@using Microsoft.AspNet.Identity
@model AccountPageViewModel
@{
    ViewBag.Title = "AccountPage";
    List<OrderDetail> thisOrderDetails = new List<OrderDetail>();
    int indexOfOrder = 0;
    string DcnName = string.Empty;
    string DelName = string.Empty;
    string PDIDtoFindImg = string.Empty;
    int endIndext = 0;
}
@section topCSS
{
    <link rel="stylesheet"
          href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
          integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
          crossorigin="anonymous" />
    <link href="~/Assets/css/Account.css" rel="stylesheet" />
}

    <main id="main" role="main">
        <div class="Container Container--narrow">
            <header class="PageHeader">
                @*<a href="/account/logout"
                   class="PageHeader__Back Heading Text--subdued Link Link--primary u-h7">Logout</a>
                <div class="SectionHeader">
                    <h1 class="SectionHeader__Heading Heading u-h1">My account</h1>
                    <p class="SectionHeader__Description">Welcome back, Zeng!</p>
                </div>*@
                @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
                {
                    @Html.AntiForgeryToken()

                    <ul class="nav navbar-nav navbar-right">
                        <li>
                            <a href="javascript:document.getElementById('logoutForm').submit()"
                               class="PageHeader__Back Heading Text--subdued Link Link--primary u-h7">Logout</a>
                        </li>
                        <li><h1 class="SectionHeader__Heading Heading u-h1">My account</h1></li>
                        <li>
                            <p class="SectionHeader__Description">Welcome back,
                                @Model.User.Name
                                <span>!</span>
                            </p>
                        </li>
                    </ul>
                }
            </header>
            <div class="PageLayout PageLayout--breakLap">
                <div class="PageLayout__Section PageLayout__Section--secondary">
                    <div class="Segment">
                        <h2 class="Segment__Title Heading u-h7">Member information</h2>
                        <div class="Segment__Content">
                            <p>Incomplete message</p>
                            <div class="Segment__ButtonWrapper">
                                <a href="/account/addresses" class="Button Button--primary" data-toggle="modal" data-target="#Account">Manage check</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="PageLayout__Section">
                    <h2 class="Segment__Title Heading u-h7">My orders</h2>
                    <div class="Segment__Content">
                        <!-- <p>You haven't placed any orders yet</p> -->
                        <table class="table">
                            @*<thead>
                      <tr>
                        <th scope="col">#</th>
                        <th scope="col">Order number</th>
                        <th scope="col">Product</th>
                        <th scope="col">UnitPrice</th>
                        <th scope="col">Quantity</th>
                        <th scope="col">Recipient</th>
                      </tr>
                    </thead>*@
                            <tbody>
                                @if (Model.Orders != null)
                                {
                                    foreach (var item in Model.Orders)
                                    {
                                        <tr>
                                            @{ 
                                                indexOfOrder = Model.Orders.IndexOf(item) + 1;
                                            }
                                            <td scope="row">
                                                @indexOfOrder.ToString()
                                            </td>
                                            <td>
                                                訂單編號 :
                                                @Html.DisplayFor(modelItem => item.OrderID)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.RecipientName)
                                            </td>
                                            <td></td>
                                            <td></td>
                                            <td>
                                                @{ 
                                                    DcnName = "Dcn" + item.OrderID;
                                                    DelName = "Del" + item.OrderID;
                                                }
                                                <div class="Segment__ButtonWrapper">
                                                    <a href="/account/addresses"
                                                       class="Button Button--primary "
                                                       data-toggle="modal"
                                                       data-target="#@DcnName">Detail</a>
                                                    @*<a href="/account/addresses"
                                                       class="Button Button--primary "
                                                       data-toggle="modal"
                                                       data-target="#@DelName">delete</a>*@

                                                    <div id="@DcnName"
                                                         class="modal right fade bd-example-modal-xl"
                                                         tabindex="-1"
                                                         role="dialog"
                                                         aria-labelledby="myExtraLargeModalLabel"
                                                         aria-hidden="true">
                                                        <div class="modal-dialog modal-xl">
                                                            <div class="modal-content">
                                                                <table class="table">
                                                                    @if (Model.OrderDetails != null)
                                                                    {
                                                                        <thead>
                                                                            <tr>
                                                                                <th scope="col">
                                                                                    @Html.DisplayNameFor(model => model.OrderDetails.First().ProductDetail.Images.First().ImgName)
                                                                                </th>
                                                                                <th scope="col">
                                                                                    @Html.DisplayNameFor(model => model.OrderDetails.First().ProductDetail.Product.ProductName)
                                                                                </th>
                                                                                <th scope="col">
                                                                                    @Html.DisplayNameFor(model => model.OrderDetails.First().ProductDetail.PDID)
                                                                                </th>
                                                                                <th scope="col">
                                                                                    @Html.DisplayNameFor(model => model.OrderDetails.First().ProductDetail.Color.ColorName)
                                                                                </th>
                                                                                <th scope="col">
                                                                                    @Html.DisplayNameFor(model => model.OrderDetails.First().ProductDetail.Size.SizeContext)
                                                                                </th>
                                                                                <th scope="col">
                                                                                    @Html.DisplayNameFor(model => model.OrderDetails.First().Quantity)
                                                                                </th>
                                                                                <th scope="col">
                                                                                    @Html.DisplayNameFor(model => model.OrderDetails.First().Price)
                                                                                </th>
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody>
                                                                            @{
                                                                                thisOrderDetails = Model.OrderDetails.Where(x => x.OrderID == item.OrderID).ToList();
                                                                            }
                                                                            @foreach (var sonitem in thisOrderDetails)
                                                                            {
                                                                                <tr>
                                                                                    <td>
                                                                                        @{
                                                                                            endIndext = sonitem.PDID.IndexOf("-");
                                                                                            PDIDtoFindImg = sonitem.PDID.Substring(0, endIndext) + "-1";
                                                                                        }
                                                                                        <div class="Chimg">
                                                                                            <a src="" href="#">
                                                                                                <img class="img_bottom" src="~/Assets/images/@sonitem.ProductDetail.Product.Category.CategoryName/@Model.images.Find(x => x.PDID == PDIDtoFindImg).ImgName" alt="" />
                                                                                            </a>
                                                                                        </div>
                                                                                    </td>
                                                                                    <td>
                                                                                        @Html.DisplayFor(modelItem => sonitem.ProductDetail.Product.ProductName)
                                                                                    </td>
                                                                                    <td>
                                                                                        @Html.DisplayFor(modelItem => sonitem.PDID)
                                                                                    </td>
                                                                                    <td>
                                                                                        @Html.DisplayFor(modelItem => sonitem.ProductDetail.Color.ColorName)
                                                                                    </td>
                                                                                    <td>
                                                                                        @Html.DisplayFor(modelItem => sonitem.ProductDetail.Size.SizeContext)
                                                                                    </td>
                                                                                    <td>
                                                                                        @Html.DisplayFor(modelItem => sonitem.Quantity)
                                                                                    </td>
                                                                                    <td>
                                                                                        @Html.DisplayFor(modelItem => sonitem.Price)
                                                                                    </td>
                                                                                </tr>
                                                                            }
                                                                        </tbody>
                                                                    }
                                                                </table>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }

                                }

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>



        <!-- 弹出层 modal -->
        <div class="modal fade" id="Account" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content p-5">
                    @using (Html.BeginForm("AccountPage", "Home", FormMethod.Post, new { @name = "fix_user_data", @class = "Form Form--spacingTight", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="modal-header mx-auto">
                            <header class="Modal__Header">
                                <h3 class="Modal__Title Heading u-h2">Check your information</h3>
                                <p class="Modal__Description">Please fill in the information below:</p>
                            </header>
                        </div>
                        <div class="Modal__Content">
                            @Html.ValidationSummary("", new { @class = "Text-red" })
                            @Html.HiddenFor(model => model.User.Id)
                            <div class="Form__Item">
                                @Html.LabelFor(model => model.User.Name, "Name", htmlAttributes: new { @class = "Form__FloatingLabel" })
                                @Html.TextBoxFor(m => m.User.Name, new { @Name = "Name",@placeholder = "Name", @class = "Form__Input" })
                                @Html.ValidationMessageFor(model => model.User.Name, "", new { @class = "text-danger" })
                                @*<input type="text" class="Form__Input" name="Name" value="" placeholder="Name" aria-label="Name" autofocus>
                                  <label class="Form__FloatingLabel">Name</label>*@
                            </div>

                            <div class="Form__Item">
                                @Html.LabelFor(model => model.User.Email, "Email", htmlAttributes: new { @class = "Form__FloatingLabel" })
                                @Html.TextBoxFor(m => m.User.Email, new { @Name = "Email", @placeholder = "Email", @class = "Form__Input", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.User.Email, "", new { @class = "text-danger" })
                                @*<input type="text" class="Form__Input" name="Email" value="" placeholder="Email" aria-label="Email">
                                  <label class="Form__FloatingLabel">Email</label>*@
                            </div>

                            <div class="Form__Item">
                                @Html.LabelFor(model => model.User.PhoneNumber, "PhoneNumber", htmlAttributes: new { @class = "Form__FloatingLabel" })
                                @Html.TextBoxFor(m => m.User.PhoneNumber, new { @Name = "PhoneNumber", @placeholder = "Phone", @class = "Form__Input" })
                                @Html.ValidationMessageFor(model => model.User.PhoneNumber, "", new { @class = "text-danger" })
                                @*<input type="text" class="Form__Input" name="phone" value="" placeholder="phone" aria-label="phone">
                                  <label class="Form__FloatingLabel">phone</label>*@
                            </div>

                            <div class="Form__Group">
                                <div class="Form__Item">
                                    <div class="Form__Select Select Select--primary">
                                        <svg class="Icon Icon--select-arrow" role="presentation" viewBox="0 0 19 12">
                                            <polyline fill="none" stroke="currentColor" points="17 2 9.5 10 2 2" fill-rule="evenodd" stroke-width="2" stroke-linecap="square"></polyline>
                                        </svg>
                                        @*@Model.user.City*@
                                        @Html.LabelFor(model => model.User.City, "City", htmlAttributes: new { @class = "Form__FloatingLabel" })
                                        @if (Model.User.City != null)
                                        {
                                            @Html.DropDownList("City", null, Model.User.City.Trim(), htmlAttributes: new { @class = "", @Value=Model.User.City.Trim() })
                                        }
                                        else
                                        {
                                            @Html.DropDownList("City", null,"", htmlAttributes: new { @class = "",@Value="" })
                                        }
                                        @Html.ValidationMessageFor(model => model.User.City, "", new { @class = "text-danger" })
                                        @*<select name="City" title="City">
                                          <option value="台北市"> 台北市 </option>
                                          <option value="基隆市"> 基隆市 </option>
                                          <option value="新北市"> 新北市 </option>
                                          <option value="宜蘭縣"> 宜蘭縣 </option>
                                          <option value="新竹市"> 新竹市 </option>
                                          <option value="新竹縣"> 新竹縣 </option>
                                          <option value="桃園縣"> 桃園縣 </option>
                                          <option value="苗栗縣"> 苗栗縣 </option>
                                          <option value="台中市"> 台中市 </option>
                                          <option value="彰化縣"> 彰化縣 </option>
                                          <option value="南投縣"> 南投縣 </option>
                                          <option value="嘉義市"> 嘉義市 </option>
                                          <option value="嘉義縣"> 嘉義縣 </option>
                                          <option value="雲林縣"> 雲林縣 </option>
                                          <option value="台南市"> 台南市 </option>
                                          <option value="高雄市"> 高雄市 </option>
                                          <option value="澎湖縣"> 澎湖縣 </option>
                                          <option value="屏東縣"> 屏東縣 </option>
                                          <option value="台東縣"> 台東縣 </option>
                                          <option value="花蓮縣"> 花蓮縣 </option>
                                          <option value="金門縣"> 金門縣 </option>
                                          <option value="連江縣"> 連江縣 </option>
                                          </select>*@
                                    </div>
                                </div>
                            </div>

                            <div class="Form__Item">
                                @Html.LabelFor(model => model.User.Address, "Address", htmlAttributes: new { @class = "Form__FloatingLabel" })
                                @Html.TextBoxFor(m => m.User.Address, new { @Name = "Address", @placeholder = "Address", @class = "Form__Input" })
                                @Html.ValidationMessageFor(model => model.User.Address, "", new { @class = "text-danger" })
                                @*<input type="text" class="Form__Input" name="Address" value="" placeholder="Address" aria-label="Address">
                                  <label class="Form__FloatingLabel">Address</label>*@
                            </div>

                            <div class="Form__Item">
                                @Html.LabelFor(model => model.User.ZipCode, "ZipCode", htmlAttributes: new { @class = "Form__FloatingLabel" })
                                @Html.TextBoxFor(m => m.User.ZipCode, new { @Name = "ZipCode", @placeholder = "Zip code", @class = "Form__Input" })
                                @Html.ValidationMessageFor(model => model.User.ZipCode, "", new { @class = "text-danger" })
                                @*<input type="text" class="Form__Input" name="Zip code" value="" placeholder="Zip code" aria-label="Zip code">
                                  <label class="Form__FloatingLabel">Zip code</label>*@
                            </div>

                            <div class="Form__Item Form__Select Select Select--primary" style="display: none">
                                <svg class="Icon Icon--select-arrow" role="presentation" viewBox="0 0 19 12">
                                    <polyline fill="none" stroke="currentColor" points="17 2 9.5 10 2 2" fill-rule="evenodd" stroke-width="2" stroke-linecap="square"></polyline>
                                </svg><select name="address[province]" title="Province"></select>
                            </div>

                            <div class="Form__Item">
                                <div class="Form__CheckboxWrapper">
                                    <input type="checkbox" class="Form__Checkbox" name="address[default]" id="address-new[default]" value="0">

                                    <svg class="Icon Icon--checkmark" role="presentation" viewBox="0 0 24 24">
                                        <polygon fill="currentColor" points="9,20 2,13 5,10 9,14 19,4 22,7 "></polygon>
                                    </svg>

                                    <label for="address-new[default]">Set as default</label>
                                </div>
                            </div>

                            <button type="submit" class="Form__Submit Button Button--primary Button--full">change content</button>
                        </div>
                    }
                </div>
            </div>
        </div>


    </main>

<script>

</script>